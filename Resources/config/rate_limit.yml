# https://github.com/jaytaph/RateLimitBundle
######################
#noxlogic_rate_limit:
#    enabled: false
noxlogic_rate_limit:
    enabled:              true

    # The storage engine where all the rates will be stored
    storage_engine:       doctrine # One of "redis"; "memcache"; "doctrine"

    # The redis client to use for the redis storage engine
    redis_client:         default_client

    # The memcache client to use for the memcache storage engine
    memcache_client:      default

    # The Doctrine Cache provider to use for the doctrine storage engine
    doctrine_provider:    rate_limit_cache # Example: my_apc_cache

    # The HTTP status code to return when a client hits the rate limit
    rate_response_code:   429

    # Optional exception class that will be returned when a client hits the rate limit
    # rate_response_exception:  null

    # The HTTP message to return when a client hits the rate limit
    rate_response_message:  'You exceeded the rate limit'

    # Should the ratelimit headers be automatically added to the response?
    display_headers:      true

    # What are the different header names to add
    headers:
        limit:                X-RateLimit-Limit
        remaining:            X-RateLimit-Remaining
        reset:                X-RateLimit-Reset